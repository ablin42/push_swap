==11116== Memcheck, a memory error detector
==11116== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11116== Using Valgrind-3.14.0.GIT and LibVEX; rerun with -h for copyright info
==11116== Command: ./checker 1
==11116== Parent PID: 391
==11116== 
==11116== Conditional jump or move depends on uninitialised value(s)
==11116==    at 0x10000133B: ps_add_node_back (checker.c:25)
==11116==    by 0x10000146D: ps_cycle_stack (checker.c:58)
==11116==    by 0x1000016C7: main (checker.c:115)
==11116==  Uninitialised value was created by a stack allocation
==11116==    at 0x10000B1D2: _dyld_start (in /usr/lib/dyld)
==11116== 
==11116== Invalid write of size 8
==11116==    at 0x100002622: move_push_b (moves.c:149)
==11116==    by 0x100001B3A: ps_cycle_move (read.c:33)
==11116==    by 0x100001ED8: ps_cycle_arg (read.c:101)
==11116==    by 0x100001D5E: ps_read_input (read.c:120)
==11116==    by 0x100001BD8: ps_read_and_execute (read.c:65)
==11116==    by 0x10000171B: main (checker.c:119)
==11116==  Address 0x100d5c818 is 8 bytes inside a block of size 16 free'd
==11116==    at 0x1000B39AB: free (in /usr/local/Cellar/valgrind/HEAD-5f900ed/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==11116==    by 0x100002D67: ft_memdel (in ./checker)
==11116==    by 0x1000025F9: move_push_b (moves.c:146)
==11116==    by 0x100001B3A: ps_cycle_move (read.c:33)
==11116==    by 0x100001ED8: ps_cycle_arg (read.c:101)
==11116==    by 0x100001D5E: ps_read_input (read.c:120)
==11116==    by 0x100001BD8: ps_read_and_execute (read.c:65)
==11116==    by 0x10000171B: main (checker.c:119)
==11116==  Block was alloc'd at
==11116==    at 0x1000B35C6: malloc (in /usr/local/Cellar/valgrind/HEAD-5f900ed/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==11116==    by 0x1000012FD: ps_add_node_back (checker.c:20)
==11116==    by 0x10000146D: ps_cycle_stack (checker.c:58)
==11116==    by 0x1000016C7: main (checker.c:115)
==11116== 
==11116== Invalid write of size 8
==11116==    at 0x1000024C4: move_push_a (moves.c:121)
==11116==    by 0x100001B3A: ps_cycle_move (read.c:33)
==11116==    by 0x100001ED8: ps_cycle_arg (read.c:101)
==11116==    by 0x100001D5E: ps_read_input (read.c:120)
==11116==    by 0x100001BD8: ps_read_and_execute (read.c:65)
==11116==    by 0x10000171B: main (checker.c:119)
==11116==  Address 0x100d5da88 is 8 bytes inside a block of size 16 free'd
==11116==    at 0x1000B39AB: free (in /usr/local/Cellar/valgrind/HEAD-5f900ed/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==11116==    by 0x100002D67: ft_memdel (in ./checker)
==11116==    by 0x10000249A: move_push_a (moves.c:118)
==11116==    by 0x100001B3A: ps_cycle_move (read.c:33)
==11116==    by 0x100001ED8: ps_cycle_arg (read.c:101)
==11116==    by 0x100001D5E: ps_read_input (read.c:120)
==11116==    by 0x100001BD8: ps_read_and_execute (read.c:65)
==11116==    by 0x10000171B: main (checker.c:119)
==11116==  Block was alloc'd at
==11116==    at 0x1000B35C6: malloc (in /usr/local/Cellar/valgrind/HEAD-5f900ed/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==11116==    by 0x100001FFD: ps_add_node_front (moves.c:36)
==11116==    by 0x1000025D7: move_push_b (moves.c:144)
==11116==    by 0x100001B3A: ps_cycle_move (read.c:33)
==11116==    by 0x100001ED8: ps_cycle_arg (read.c:101)
==11116==    by 0x100001D5E: ps_read_input (read.c:120)
==11116==    by 0x100001BD8: ps_read_and_execute (read.c:65)
==11116==    by 0x10000171B: main (checker.c:119)
==11116== 
==11116== 
==11116== HEAP SUMMARY:
==11116==     in use at exit: 18,324 bytes in 165 blocks
==11116==   total heap usage: 323 allocs, 158 frees, 29,304 bytes allocated
==11116== 
==11116== LEAK SUMMARY:
==11116==    definitely lost: 0 bytes in 0 blocks
==11116==    indirectly lost: 6,864 bytes in 7 blocks
==11116==      possibly lost: 0 bytes in 0 blocks
==11116==    still reachable: 98 bytes in 4 blocks
==11116==         suppressed: 11,362 bytes in 154 blocks
==11116== Reachable blocks (those to which a pointer was found) are not shown.
==11116== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==11116== 
==11116== For counts of detected and suppressed errors, rerun with: -v
==11116== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 22 from 22)
